eval(atob("!function(){return function e(t,r,a){function s(i,o){if(!r[i]){if(!t[i]){var d="function"==typeof require&&require;if(!o&&d)return d(i,!0);if(n)return n(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var p=r[i]={exports:{}};t[i][0].call(p.exports,function(e){return s(t[i][1][e]||e)},p,p.exports,e,t,r,a)}return r[i].exports}for(var n="function"==typeof require&&require,i=0;i<a.length;i++)s(a[i]);return s}}()({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});const a=e("../snippet-core"),s=e("../extractors/storage-extractor");(new a.SnippetCore).Run(s.StorageExtractor)},{"../extractors/storage-extractor":5,"../snippet-core":9}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.AddressableDataProvider=class{constructor(e){this.data=e,this.Addresses=Object.keys(e.address.addressable).map(t=>({key:t,addressable:e.address.addressable[t]})).filter(e=>!!e.addressable).map(e=>{var t=e.addressable.lines[e.addressable.lines.length-1];return{id:e.key,type:t.type,naturalId:t.entity.naturalId,name:t.entity.name}}).reduce((e,t)=>Object.assign(e,{[t.id]:t}),{})}}},{}],3:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.PlanetDataProvider=class{constructor(e){this.data=e,this.Planets=Object.keys(e.planets.planets.data).map(t=>e.planets.planets.data[t]).map(e=>({id:e.planetId,type:"PLANET",naturalId:e.naturalId,name:e.name})).reduce((e,t)=>Object.assign(e,{[t.id]:t}),{})}}},{}],4:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.ShipDataProvider=class{constructor(e){this.data=e,this.Ships=Object.keys(e.fleet.ships.data).map(t=>e.fleet.ships.data[t]).map(e=>({id:e.id,type:"SHIP",naturalId:e.registration,name:e.name})).reduce((e,t)=>Object.assign(e,{[t.id]:t}),{})}}},{}],5:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});const a=e("./data-providers/addressable-dp"),s=e("./data-providers/planet-dp"),n=e("./data-providers/ship-dp");e("../helpers");r.StorageExtractor=class{Parse(e){this.addresses=new a.AddressableDataProvider(e).Addresses,this.planets=new s.PlanetDataProvider(e).Planets,this.ships=new n.ShipDataProvider(e).Ships;for(var t=this.parseColonies(e).map(t=>({dataVersion:"STORAGE-003-COLONY",userInfo:{username:e.user.data.username,companyId:e.user.data.companyId,userId:e.user.data.id},colony:t})),r=[{dataVersion:"STORAGE-003-TRADES",userInfo:{username:e.user.data.username,companyId:e.user.data.companyId,userId:e.user.data.id},liquid:this.parseLiquid(e),trades:this.parseTrades(e),ships:this.parseNonColonyStorage(e)},...t];r.length<30;)r.push({});return r}parseLiquid(e){return{cxBuys:Object.keys(e.comex.trader.orders.data.data).map(t=>e.comex.trader.orders.data.data[t]).filter(e=>"BUYING"==e.type.toUpperCase()).map(e=>({naturalId:`CX.${e.exchange.code}`,name:e.exchange.name,bid:{quantity:e.amount,amount:e.limit.amount},currency:e.limit.currency,amount:e.amount*e.limit.amount,ticker:e.material.ticker})),currency:Object.keys(e.finance.cash.balances).map(t=>e.finance.cash.balances[t]).filter(e=>e.amount>0).map(e=>({naturalId:`WALLET.${e.currency}`,amount:e.amount,currency:e.currency}))}}parseNonColonyStorage(e){return Object.keys(e.storage.stores).map(t=>e.storage.stores[t]).filter(e=>"STL_FUEL_STORE"==e.type.toUpperCase()||"FTL_FUEL_STORE"==e.type.toUpperCase()||"SHIP_STORE"==e.type.toUpperCase()).map(e=>{var t=e.name,r=null;return this.ships[e.addressableId]&&(t=this.ships[e.addressableId].name,r=this.ships[e.addressableId].naturalId),{name:t,naturalId:r,type:e.type,inventory:e.items.filter(e=>"BLOCKED"!=e.type.toUpperCase()&&"SHIPMENT"!=e.type.toUpperCase()).map(e=>[e.quantity.material.ticker,e.quantity.amount])}})}parseTrades(e){var t=Object.keys(e.comex.trader.orders.data.data).map(t=>e.comex.trader.orders.data.data[t]).filter(e=>"SELLING"==e.type.toUpperCase()).map(e=>({naturalId:`CX.${e.exchange.code}`,name:e.exchange.name,amount:e.amount,ticker:e.material.ticker})).reduce((e,t)=>Object.assign(e,{[t.naturalId]:e[t.naturalId]?[...e[t.naturalId],t]:[t]}),{});return Object.values(t).map(e=>({naturalId:e[0].naturalId,name:e[0].name,type:"CX-SELL",inventory:e.map(e=>[e.ticker,e.amount])}))}parseColonies(e){var t=Object.keys(e.sites.sites.index.data).map(t=>e.sites.sites.index.data[t]).map(e=>{var t=this.addresses[e.siteId];return{siteId:e.siteId,address:t}}),r=Object.keys(e.storage.stores).map(t=>e.storage.stores[t]).filter(e=>"STORE"==e.type.toUpperCase()).map(e=>(e.name,this.addresses[e.addressableId]?(this.addresses[e.addressableId].name,this.addresses[e.addressableId].naturalId):this.planets[e.addressableId]&&(this.planets[e.addressableId].name,this.planets[e.addressableId].naturalId),{siteId:e.addressableId,inventory:e.items.filter(e=>"BLOCKED"!=e.type.toUpperCase()&&"SHIPMENT"!=e.type.toUpperCase()).map(e=>[e.quantity.material.ticker,e.quantity.amount])})).toDictionary(e=>e.siteId),a=Object.keys(e.workforce.workforces.data).map(t=>e.workforce.workforces.data[t]).map(e=>{var t=e.workforces.toDictionary(e=>e.level),r=e=>({p:e.population,c:e.capacity,r:e.required,s:e.satisfaction});return{siteId:e.siteId,pioneers:r(t.PIONEER),settlers:r(t.SETTLER),technicians:r(t.TECHNICIAN),engineers:r(t.ENGINEER),scientists:r(t.SCIENTIST)}}).toDictionary(e=>e.siteId),s=Object.keys(e.sites.sections).map(t=>({siteId:t,platforms:e.sites.sections[t]})).map(({siteId:e,platforms:t})=>({siteId:e,buildings:t.map(e=>({id:`${e.module.reactorTicker}-${e.id.toUpperCase().substring(0,8)}`,ticker:e.module.reactorTicker,created:e.creationTime.timestamp,reclaimables:e.reclaimableMaterials.map(e=>[e.material.ticker,e.amount]),condition:e.condition}))})).toDictionary(e=>e.siteId),n=Object.keys(e.production.lines.data).map(t=>e.production.lines.data[t]).groupBy(e=>e.siteId),i=Object.keys(n).map(e=>({siteId:e,productionLines:n[e]})).map(({siteId:e,productionLines:t})=>{var r=this.addresses[e];return{siteId:e,productionLines:t.map(e=>({type:e.type,orders:e.orders.map(t=>({id:`${r.naturalId}-${e.type}-${t.id.toUpperCase().substring(0,8)}`,completed:t.completed,remaining:t.completion?t.completion.timestamp-t.lastUpdated.timestamp:null,inputs:(t.inputs||[]).map(e=>[e.material.ticker,e.amount]),outputs:t.outputs.map(e=>[e.material.ticker,e.amount])}))}))}}).toDictionary(e=>e.siteId);return t.map(({siteId:e,address:t})=>{var n=a[e],o=s[e],d=i[e],c=r[e];return{naturalId:t.naturalId,name:t.name,workforces:{p:n.pioneers,s:n.settlers,t:n.technicians,e:n.engineers,c:n.scientists},storage:c.inventory,buildings:o.buildings,productionLines:d?d.productionLines:[]}})}}},{"../helpers":6,"./data-providers/addressable-dp":2,"./data-providers/planet-dp":3,"./data-providers/ship-dp":4}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),Array.prototype.flatten=function(){return this.reduce((e,t)=>e.concat(t),[])},Array.prototype.groupBy=function(e){return this.reduce((t,r)=>{var a,s=e(r);return t[s]=(a=t[s],null!==a&&void 0!==a?a:[]).concat([r]),t},{})},Array.prototype.toDictionary=function(e){return this.reduce((t,r)=>{var a=e(r);return t[a]||(t[a]=r),t},{})}},{}],7:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.ExportEncoder=class{ExportToLog(e){if(e&&e.length)return e.map(e=>{var t=JSON.stringify(e);return btoa(t)}).join("\n");var t=JSON.stringify(e);return btoa(t)}}},{}],8:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});r.ReduxStoreHarness=class{GetStore(){var e=document.getElementById("container");if(!e)throw new Error("Unable to find container element, this may not be running on APEX.");if(!(e=e.children[0]))throw new Error("Unable to find child of root container element, this may not be running on APEX.");var t=Object.keys(e).filter(e=>"__rea"==e.substring(0,5))[0];if(!t)throw new Error("Unable to find react instance property name, this may not be running on APEX.");return e[t]._currentElement._owner._context.store.getState().toJS()}}},{}],9:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});const a=e("./services/export-encoder"),s=e("./services/redux-store-harness");r.SnippetCore=class{Run(e){try{var t=new e,r=new s.ReduxStoreHarness,n=new a.ExportEncoder,i=r.GetStore(),o=t.Parse(i),d=n.ExportToLog(o);console.log("Exported Data (copied to clipboard) ",d),copy(d)}catch(e){console.error("Exception occurred",e)}}}},{"./services/export-encoder":7,"./services/redux-store-harness":8}]},{},[1]);"));